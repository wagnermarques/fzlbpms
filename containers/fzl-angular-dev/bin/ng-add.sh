#!/bin/bash

# ===================================================================================
# Script para Adicionar Pacotes com 'ng add' dentro de um Cont√™iner Docker
#
# Uso: ./bin/ng-add.sh <nome-do-pacote>
# Exemplo: ./bin/ng-add.sh @angular/material
#
# Funcionalidades:
# - Detecta se o cont√™iner de desenvolvimento est√° rodando e usa 'docker exec'.
# - Se o cont√™iner n√£o estiver rodando, usa 'docker run' em modo tempor√°rio.
# - Se houver m√∫ltiplos projetos, pede para o usu√°rio escolher um.
# - Corrige as permiss√µes de todo o projeto ap√≥s a instala√ß√£o do pacote.
# ===================================================================================

set -e
source ./.env

# --- 1. Valida√ß√£o de Entradas e Vari√°veis ---
if [ -z "$1" ]; then
  echo "‚ùå Erro: O nome do pacote n√£o foi fornecido."
  echo "   Uso: $0 <nome-do-pacote>"
  echo "   Exemplo: $0 @angular/material"
  exit 1
fi

if [ -z "$DOCKER_CONTAINER_NAME" ] || [ -z "$DOCKER_IMG_NAME" ]; then
  echo "‚ùå Erro: Verifique se DOCKER_CONTAINER_NAME e DOCKER_IMG_NAME est√£o definidos no arquivo .env"
  exit 1
fi

# O nome do pacote a ser adicionado
package_to_add="$1"


# --- 2. Sele√ß√£o Inteligente do Projeto Angular ---
echo "üîé Procurando por projetos na pasta 'src-projects'..."
mapfile -t projects < <(find src-projects -maxdepth 1 -mindepth 1 -type d -printf "%f\n")

if [ ${#projects[@]} -eq 0 ]; then
    echo "‚ùå Erro: Nenhum projeto encontrado em 'src-projects'."
    exit 1
elif [ ${#projects[@]} -eq 1 ]; then
    chosen_project=${projects[0]}
    echo "‚úÖ Projeto √∫nico encontrado: '$chosen_project'"
else
    echo "‚ú® M√∫ltiplos projetos encontrados:"
    PS3="Digite o n√∫mero do projeto desejado: "
    select project in "${projects[@]}"; do
        if [[ -n "$project" ]]; then
            chosen_project=$project
            echo "‚úÖ Voc√™ selecionou o projeto: '$chosen_project'"
            break
        else
            echo "Op√ß√£o inv√°lida. Tente novamente."
        fi
    done
fi


# --- 3. L√≥gica Principal: Montar Comando e Executar ---

echo "üì¶ Adicionando o pacote '${package_to_add}' ao projeto '${chosen_project}'..."

# Comando do Angular CLI para adicionar o pacote
NG_ADD_COMMAND="ng add ${package_to_add}"

# O diret√≥rio de trabalho para o caso de 'docker run'
CONTAINER_WORKDIR_FOR_RUN="/app/${chosen_project}"


function roda_ng_add_with_docker_exec(){
  echo "üê≥ Cont√™iner encontrado em execu√ß√£o. Usando 'docker exec'..."
  # O workdir √© /app, pois o ng-serve j√° montou o projeto l√°.
  docker exec -it -w "/app" "$RUNNING_CONTAINER_ID" /bin/sh -c "$NG_ADD_COMMAND"
}

function roda_ng_add_with_docker_run(){
  echo "üê≥ Cont√™iner n√£o est√° em execu√ß√£o. Usando 'docker run' em modo tempor√°rio..."
  # Aqui, usamos o workdir din√¢mico, pois montamos toda a pasta 'src-projects'
  docker run --rm -it \
    -v "./src-projects:/app" \
    -w "$CONTAINER_WORKDIR_FOR_RUN" \
    "$DOCKER_IMG_NAME" /bin/sh -c "$NG_ADD_COMMAND"
}


# Procura por um cont√™iner em execu√ß√£o com o nome exato
RUNNING_CONTAINER_ID=$(docker ps -q -f "name=^${DOCKER_CONTAINER_NAME}$")

if [ -n "$RUNNING_CONTAINER_ID" ]; then
  roda_ng_add_with_docker_exec
else
  roda_ng_add_with_docker_run
fi


# --- 4. P√≥s-execu√ß√£o: Corrigir Permiss√µes ---
echo "üîß Corrigindo permiss√µes do projeto..."
# Como 'ng add' pode modificar v√°rios arquivos, corrigimos as permiss√µes do projeto inteiro.
project_dir="src-projects/${chosen_project}"

if [ -d "$project_dir" ]; then
    sudo chown -R $USER:$USER "$project_dir"
    echo "‚úÖ Permiss√µes corrigidas para todo o projeto '$chosen_project'."
else
    echo "‚ö†Ô∏è Aviso: O diret√≥rio do projeto '$project_dir' n√£o foi encontrado."
fi

echo "üéâ Processo conclu√≠do!"
